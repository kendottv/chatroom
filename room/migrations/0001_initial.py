# Generated by Django 5.0.7 on 2025-08-31 11:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('student_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='學號')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='頭像')),
                ('class_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='班級')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '自訂使用者',
                'verbose_name_plural': '自訂使用者',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='題目標題')),
                ('content', models.TextField(verbose_name='題目內容')),
                ('question_type', models.CharField(choices=[('sc', 'Single Choice'), ('mcq', 'Multiple Choice'), ('tf', 'True/False'), ('sa', 'Short Answer')], default='sa', max_length=10, verbose_name='題型')),
                ('options', models.JSONField(blank=True, null=True, verbose_name='選項列表')),
                ('is_correct', models.BooleanField(blank=True, default=False, null=True, verbose_name='是否正確')),
                ('correct_option_indices', models.TextField(blank=True, null=True, verbose_name='正確選項索引')),
                ('points', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='配分')),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions/', verbose_name='題目圖片')),
                ('ai_limit', models.PositiveIntegerField(default=0, help_text='0 表示無限制', verbose_name='AI 問答次數限制')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='創建者')),
            ],
            options={
                'verbose_name': '考試題目',
                'verbose_name_plural': '考試題目',
            },
        ),
        migrations.CreateModel(
            name='ExamPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='考卷名稱')),
                ('total_points', models.IntegerField(default=0, verbose_name='總分')),
                ('publish_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='發佈時間')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='開始時間')),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='截止時間')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='exam_papers/', verbose_name='考卷 PDF')),
                ('duration_minutes', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(1)], verbose_name='考試持續時間（分鐘）')),
                ('description', models.TextField(blank=True, default='', verbose_name='考試描述')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='創建者')),
                ('questions', models.ManyToManyField(to='room.examquestion', verbose_name='包含題目')),
            ],
            options={
                'verbose_name': '考卷',
                'verbose_name_plural': '考卷',
            },
        ),
        migrations.CreateModel(
            name='ExamRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='總分')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='提交時間')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('exam_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='room.exampaper', verbose_name='考卷')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_records', to=settings.AUTH_USER_MODEL, to_field='student_id', verbose_name='學生')),
            ],
            options={
                'verbose_name': '考試紀錄',
                'verbose_name_plural': '考試紀錄',
                'unique_together': {('student', 'exam_paper')},
            },
        ),
        migrations.CreateModel(
            name='InteractionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='問題')),
                ('response', models.TextField(verbose_name='回覆')),
                ('score', models.IntegerField(default=0, verbose_name='得分')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
                ('exam_paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='room.exampaper', verbose_name='相關考卷')),
                ('exam_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='room.examquestion', verbose_name='相關題目')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='使用者')),
            ],
            options={
                'verbose_name': '互動記錄',
                'verbose_name_plural': '互動記錄',
            },
        ),
        migrations.CreateModel(
            name='ExamAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_answer', models.TextField(blank=True, null=True, verbose_name='學生答案')),
                ('score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='得分')),
                ('is_correct', models.BooleanField(default=False, verbose_name='是否正確')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='回答時間')),
                ('exam_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='room.examquestion', verbose_name='題目')),
                ('exam_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_details', to='room.examrecord', verbose_name='考試紀錄')),
            ],
            options={
                'verbose_name': '答題紀錄',
                'verbose_name_plural': '答題紀錄',
                'unique_together': {('exam_record', 'exam_question')},
            },
        ),
        migrations.CreateModel(
            name='StudentExamHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_content', models.TextField(default='', verbose_name='題目內容')),
                ('student_name', models.CharField(default='', max_length=150, verbose_name='學生名稱')),
                ('exam_paper_name', models.CharField(default='', max_length=200, verbose_name='考卷名稱')),
                ('student_answer', models.TextField(blank=True, null=True, verbose_name='學生答案')),
                ('total_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='總分')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成時間')),
                ('grade', models.CharField(blank=True, max_length=10, null=True, verbose_name='等級')),
                ('exam_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='room.exampaper', verbose_name='考卷')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_history', to=settings.AUTH_USER_MODEL, to_field='student_id', verbose_name='學生')),
            ],
            options={
                'verbose_name': '考試歷史紀錄',
                'verbose_name_plural': '考試歷史紀錄',
                'unique_together': {('student', 'exam_paper', 'question_content')},
            },
        ),
    ]
